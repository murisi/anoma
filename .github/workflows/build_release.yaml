# Build Release
#
# I build a release of the project on GitHub.
#
# I take three parameters:
# - mix-env: The environment to build the release for.
# - elixir-version: The version of Elixir to use.
# - otp-version: The version of OTP to use.
# - os: The operating system to build for.
name: Build Release
on:
  workflow_call:
    inputs:
      mix-env:
        required: true
        type: string
      elixir-version:
        required: true
        type: string
      otp-version:
        required: true
        type: string
      release_name:
        required: true
        type: string
      os:
        required: true
        type: string
jobs:
  build_release:
    runs-on: ${{ inputs.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 50
      - uses: erlef/setup-beam@v1.18.2
        if: startsWith(runner.os, 'Linux') || startsWith(runner.os, 'Windows')
        with:
          otp-version: ${{ inputs.otp-version }}
          elixir-version: ${{ inputs.elixir-version }}
      - name: Install system dependencies
        shell: bash
        if: startsWith(runner.os, 'Linux')
        run: sudo apt install -y libsodium-dev protobuf-compiler
      - name: Install system dependencies
        shell: bash
        if: startsWith(runner.os, 'macOS')
        run: brew install elixir protobuf
      - name: Install system dependencies
        shell: pwsh
        if: startsWith(runner.os, 'Windows')
        run: |
          choco install protoc
          vcpkg install libsodium
      - name: Install Elixir dependencies
        shell: bash
        run: |
          mix deps.get --force
          mix escript.install hex protobuf --force
      - name: Build Anoma release
        if: startsWith(runner.os, 'Linux') || startsWith(runner.os, 'macOS')
        shell: bash
        run: |
          export PATH="$PATH:$HOME/.mix/escripts"
          mix release
      - name: Copy shared libraries
        if: startsWith(runner.os, 'macOS')
        shell: bash
        run: ./scripts/copy-dylibs.zsh _build/dev/rel/anoma
      - name: Copy shared libraries and client
        if: startsWith(runner.os, 'Linux')
        shell: bash
        run: |
           ./scripts/copy-sos.sh _build/dev/rel/anoma
           cp ./scripts/anomac _build/dev/rel/anoma/bin/
      - name: Build Anoma release
        if: startsWith(runner.os, 'Windows')
        shell: pwsh
        run: |
          & "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\Launch-VsDevShell.ps1" -Arch amd64 -SkipAutomaticLocation
          $env:PATH += $env:USERPROFILE + '\.mix\escripts;'
          $env:INCLUDE += ';' + $env:VCPKG_INSTALLATION_ROOT + '\packages\libsodium_x64-windows\include'
          $env:LIB += ';' + $env:VCPKG_INSTALLATION_ROOT + '\packages\libsodium_x64-windows\lib'
          mix release
      - name: Compute SHA hashes
        shell: pwsh
        run: |
          cd _build/dev/rel/
          tar czf anoma.tar.gz anoma
          shasum -a 1 anoma.tar.gz > anoma.tar.gz.sha1sum
          shasum -a 256 anoma.tar.gz > anoma.tar.gz.sha256sum
      - name: Create Anoma release artifacts
        uses: actions/upload-artifact@v4
        with:
          name: anoma-${{ github.ref_name }}-${{ runner.os }}-${{ runner.arch }}
          path: |
            _build/dev/rel/anoma.tar.gz
            _build/dev/rel/anoma.tar.gz.sha1sum
            _build/dev/rel/anoma.tar.gz.sha256sum
